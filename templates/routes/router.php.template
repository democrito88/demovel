<?php
require_once __DIR__ . '/../vendor/autoload.php';

class Router
{
    private $routes = [];

    public function addRoute($method, $path, $handler)
    {
        $this->routes[] = [
            'method' => $method,
            'path' => $path,
            'handler' => $handler,
        ];
    }

    public function handleRequest(array | null $parameters)
    {
        if ($_SERVER['REQUEST_METHOD'] === 'GET') {
            /*
             * Apache/Nginx users: 'PATH_INFO'
             * PHP internal server users: 'REQUEST_URI'
             */
            $requisicao = $_SERVER['PATH_INFO'];
            
            foreach($this->routes as $rota){
                if (explode('/', $rota['path'])[1] == explode('/', $requisicao)[1]){
                    $segmentos = explode('@', $rota['handler']);
                    $controller = isset($segmentos[0]) ? $segmentos[0] : 'AuthController';
                    $action = isset($segmentos[1]) ? $segmentos[1] : 'login';
                    $instancia = new $controller();
                    $instancia->$action(isset(explode("/", $requisicao)[2]) ? explode("/", $requisicao)[2] : null);
                    http_response_code(200);
                    exit();
                }
            }
        } else if ($_SERVER['REQUEST_METHOD'] === 'POST') {
            $requisicao = $_SERVER['PATH_INFO'];
            
            foreach($this->routes as $rota){
                if($rota['path'] == $requisicao){
                    $segmentos = explode('@', $rota['handler']);
                    $controller = isset($segmentos[0]) ? $segmentos[0] : 'AuthController';
                    $action = isset($segmentos[1]) ? $segmentos[1] : 'login';
                    $instancia = new $controller();
                    $instancia->$action($parameters);
                    http_response_code(200);
                    exit();
                }
            }

            http_response_code(404);
            echo '404 Not Found';
        }
    }
}